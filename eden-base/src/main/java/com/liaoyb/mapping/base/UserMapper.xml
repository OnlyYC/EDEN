<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liaoyb.persistence.dao.base.UserMapper" >
  <resultMap id="BaseResultMap" type="com.liaoyb.persistence.domain.vo.base.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="avatarUrl" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="BIGINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="registerTime" property="registerTime" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="BIGINT" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="registerCode" property="registerCode" jdbcType="VARCHAR" />
    <result column="valid" property="valid" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, avatarUrl, country, email, info, name, password, qq, registerTime, sex, tel, 
    registerCode, valid, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liaoyb.persistence.domain.vo.base.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liaoyb.persistence.domain.vo.base.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liaoyb.persistence.domain.vo.base.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (avatarUrl, country, email, 
      info, name, password, 
      qq, registerTime, sex, 
      tel, registerCode, valid, 
      state)
    values (#{avatarUrl,jdbcType=VARCHAR}, #{country,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, 
      #{info,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{registerTime,jdbcType=BIGINT}, #{sex,jdbcType=BIGINT}, 
      #{tel,jdbcType=VARCHAR}, #{registerCode,jdbcType=VARCHAR}, #{valid,jdbcType=BIGINT}, 
      #{state,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.liaoyb.persistence.domain.vo.base.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="avatarUrl != null" >
        avatarUrl,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="registerTime != null" >
        registerTime,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="registerCode != null" >
        registerCode,
      </if>
      <if test="valid != null" >
        valid,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=BIGINT},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIGINT},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="registerCode != null" >
        #{registerCode,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liaoyb.persistence.domain.vo.base.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.avatarUrl != null" >
        avatarUrl = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=BIGINT},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null" >
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null" >
        registerTime = #{record.registerTime,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIGINT},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.registerCode != null" >
        registerCode = #{record.registerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null" >
        valid = #{record.valid,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=BIGINT},
      avatarUrl = #{record.avatarUrl,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      registerTime = #{record.registerTime,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=BIGINT},
      tel = #{record.tel,jdbcType=VARCHAR},
      registerCode = #{record.registerCode,jdbcType=VARCHAR},
      valid = #{record.valid,jdbcType=BIGINT},
      state = #{record.state,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liaoyb.persistence.domain.vo.base.User" >
    update user
    <set >
      <if test="avatarUrl != null" >
        avatarUrl = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        registerTime = #{registerTime,jdbcType=BIGINT},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIGINT},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="registerCode != null" >
        registerCode = #{registerCode,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liaoyb.persistence.domain.vo.base.User" >
    update user
    set avatarUrl = #{avatarUrl,jdbcType=VARCHAR},
      country = #{country,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      registerTime = #{registerTime,jdbcType=BIGINT},
      sex = #{sex,jdbcType=BIGINT},
      tel = #{tel,jdbcType=VARCHAR},
      registerCode = #{registerCode,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=BIGINT},
      state = #{state,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>