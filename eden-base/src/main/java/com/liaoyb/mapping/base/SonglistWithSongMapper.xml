<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liaoyb.persistence.dao.base.SonglistWithSongMapper" >
  <resultMap id="BaseResultMap" type="com.liaoyb.persistence.domain.vo.base.SonglistWithSong" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="rank" property="rank" jdbcType="BIGINT" />
    <result column="songId" property="songId" jdbcType="BIGINT" />
    <result column="songlistId" property="songlistId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, rank, songId, songlistId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liaoyb.persistence.domain.vo.base.SonglistWithSongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from songlist_with_song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from songlist_with_song
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from songlist_with_song
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liaoyb.persistence.domain.vo.base.SonglistWithSongExample" >
    delete from songlist_with_song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liaoyb.persistence.domain.vo.base.SonglistWithSong" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into songlist_with_song (rank, songId, songlistId
      )
    values (#{rank,jdbcType=BIGINT}, #{songId,jdbcType=BIGINT}, #{songlistId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liaoyb.persistence.domain.vo.base.SonglistWithSong" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into songlist_with_song
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rank != null" >
        rank,
      </if>
      <if test="songId != null" >
        songId,
      </if>
      <if test="songlistId != null" >
        songlistId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rank != null" >
        #{rank,jdbcType=BIGINT},
      </if>
      <if test="songId != null" >
        #{songId,jdbcType=BIGINT},
      </if>
      <if test="songlistId != null" >
        #{songlistId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liaoyb.persistence.domain.vo.base.SonglistWithSongExample" resultType="java.lang.Integer" >
    select count(*) from songlist_with_song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update songlist_with_song
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.rank != null" >
        rank = #{record.rank,jdbcType=BIGINT},
      </if>
      <if test="record.songId != null" >
        songId = #{record.songId,jdbcType=BIGINT},
      </if>
      <if test="record.songlistId != null" >
        songlistId = #{record.songlistId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update songlist_with_song
    set id = #{record.id,jdbcType=BIGINT},
      rank = #{record.rank,jdbcType=BIGINT},
      songId = #{record.songId,jdbcType=BIGINT},
      songlistId = #{record.songlistId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liaoyb.persistence.domain.vo.base.SonglistWithSong" >
    update songlist_with_song
    <set >
      <if test="rank != null" >
        rank = #{rank,jdbcType=BIGINT},
      </if>
      <if test="songId != null" >
        songId = #{songId,jdbcType=BIGINT},
      </if>
      <if test="songlistId != null" >
        songlistId = #{songlistId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liaoyb.persistence.domain.vo.base.SonglistWithSong" >
    update songlist_with_song
    set rank = #{rank,jdbcType=BIGINT},
      songId = #{songId,jdbcType=BIGINT},
      songlistId = #{songlistId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>